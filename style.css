:root
{
  --primary:#FFCE00;
  --secondary:#FE4880;
  --dark:#212121;
  --light:#F3F3F3;
}
*
{
    margin:0;
    padding:0;
    font-family: 'Roboto Condensed', sans-serif;
    box-sizing: border-box;
}

/* positin fixed for fixed position and zindex for only displaying the loader not other contents */
#loading
{
  position:fixed;
  width:100%;
  height:100vh;
  background: #fff url('./images/1479.gif')
  no-repeat center;
  z-index: 9999;
}

html
{
    scroll-behavior: smooth;
}

.main-head
{
    width:100%;
    height:10vh;
    /* border:2px solid red; */
    /* background-color:black; */
    display:flex;
    /* color:aliceblue */
    align-items: center;
    justify-content: space-between;

}
.hr-comn
{
    display: inline-block;
    justify-content: space-around;
    margin:0.7rem;
}

.slideshow-container {
    width: 99vw;
    height:82vh;
    position: relative;
    margin: auto;
  }
  
  /* Hide the images by default */
  .Slides {
    display: none;
  }
  
  .ic
  {
    height:82vh;
  }

  /* Next & previous buttons */
  .prev, .next {
    cursor: pointer;
    position: absolute;
    top: 50%;
    width: auto;
    margin-top: -22px;
    padding: 16px;
    color: white;
    font-weight: bold;
    font-size: 18px;
    transition: 0.6s ease;
    border-radius: 0 3px 3px 0;
    user-select: none;
    background-color:rgba(0,0,0,0.4);
  }
  
  /* Position the "next button" to the right */
  .next {
    right: 0;
    border-radius: 3px 0 0 3px;
  }
  
  /* On hover, add a black background color with a little bit see-through */
  .prev:hover, .next:hover {
    background-color: rgba(0,0,0,0.8);
  }
  
  /* Caption text */
  .text {
    color: #f2f2f2;
    font-size: 15px;
    padding: 8px 12px;
    position: absolute;
    bottom: 2rem;
    width: 100%;
    text-align: center;
    background-color: rgba(0,0,0,0.3);
  }
  
  /* Number text (1/3 etc) */
  .numbertext {
    color: #f2f2f2;
    font-size: 12px;
    padding: 8px 12px;
    position: absolute;
    top: 0;
    background-color:rgba(0,0,0,0.3)
  }
  
  /* The dots/bullets/indicators */
  .dot-container
  {
    width: 100%;
    position: absolute;
    bottom:0.3rem;
    text-align: center;
  }
  .dot {
    cursor: pointer;
    height: 15px;
    width: 15px;
    margin: 0 2px;
    background-color: #bbb;
    border-radius: 50%;
    display: inline-block;
    transition: background-color 0.6s ease;
  }
  
  .active, .dot:hover {
    background-color: #717171;
  }
  
  /* Fading animation */
  .fade {
    -webkit-animation-name: fade;
    -webkit-animation-duration: 1.5s;
    animation-name: fade;
    animation-duration: 1.5s;
  }
  
  @-webkit-keyframes fade {
    from {opacity: .4}
    to {opacity: 1}
  }
  
  @keyframes fade {
    from {opacity: .4}
    to {opacity: 1}
  }

.about-container 
{
  display:flex;
  width:50%;
  position:relative;
  text-align: center;
  align-items:center;
  justify-content:center; 
  margin:auto;
  border:2px solid black;
  border-radius:0.6rem;
  box-shadow:10px 10px 8px 10px #888888 ;
  margin-top:3rem;
  margin-bottom: 4rem;
  word-spacing: 1em;
  letter-spacing: 0.01em;
  line-height: 1.5rem;
}
.about 
{
  /* display:flex; */
  /* display:flex; */
  text-align: center;
  align-items: center;
  justify-content: center;
  margin:1rem;
}


.about>h1
{
  margin:1rem;
}

/* .reach-container
{
  width:100%;
  position:relative;
} */

.reach-container
{
  display:flex;
  justify-content: space-around;
  margin-bottom:2rem;
}
.reach
{
  height:20rem;
  width:20rem;
  border:2px solid black;
  border-radius: 0.6rem;
  box-shadow:10px 10px 8px 10px #888888 ;

}

/* maps */
#map
{
  height: 500px;
  width:100%; 
}

/* card */
.card
{
  text-decoration: none;
  cursor:pointer;
  width:340px;
  height:480px;
}
.card-container
{
  width:100%;
  position:relative;
  display: flex;
  justify-content: center;
  margin:auto;
}
.middle
{
  position:absolute;
}
.middle-back
{
  position:absolute;
}
.front,.back
{
  width:100%;
  height:100%;
  overflow: hidden;
  backface-visibility:hidden;
  position:absolute;
  transition:transform .6s linear;
}

/* The perspective distance used by perspective() 
is specified by a <length> value, which represents
 the distance between the user and the z=0 plane, 
 or by none. The z=0 plane is the plane where everything
  appears in a 2-dimensional view, or the screen. Negative
   values are syntax errors. Values smaller than 1px 
   (including zero) are clamped to 1px. Values other
    than none cause elements with positive z positions 
    to appear larger, and elements with negative z positions 
    to appear smaller. */

 /* example of perspective
  https://codepen.io/desandro/pen/XqMGRB
  mainly it gives 3d view
 */
.front img 
{
  height:100%;
  width:100%;
  transform:perspective(600px) rotateY(0deg);
}

.back
{
  background:#f1f1f1;
  transform:perspective(600px) rotateY(180deg);
  display: flex;
  align-items:center;
  justify-content:center;
}

.back-content
{
  color:#2c3e50;
  width:100%;
  text-align:center;
}
.sm
{
  margin:20px 0;
}
.sm a 
{
  display:inline-flex;
  width:40px;
  height:50px;
  justify-content:center;
  align-items:center;
  color:#2c3e50;
  font-size:18px;
  transition:0.4s;
  border-radius:20%;
}
.sm a:hover
{
  background:#2c3e50;
  color:white;
}
.card:hover>.front
{
  transform:perspective(600px) rotateY(-180deg);
}
.card:hover>.back
{
  transform:perspective(600px) rotateY(0deg);
}
/* responsiveess controler */

@media only screen and (max-width:1000px)
{
  .r1
  {
    flex-wrap: wrap;
  }
}
